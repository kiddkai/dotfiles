# rebind
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# set default shell to zsh
set-option -g default-shell /bin/zsh
set-option -g default-terminal screen-256color

# set vi mode keys
setw -g mode-keys vi
set-option -g status-keys vi

# reload config
bind-key r source-file ~/.config/tmux/tmux.conf

# don't trigger alt during escape
set -s escape-time 0

# vim split pane
bind h split-window -v
bind v split-window -h

# mouse
set -g mouse on

# move focus between panes
# ctrl+[hjkl]
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# resize panes
# alt+[hjkl]
bind -n M-k resize-pane -U 5
bind -n M-j resize-pane -D 5
bind -n M-h resize-pane -L 5
bind -n M-l resize-pane -R 5

# Smart pane resizing with awareness of Vim splits.
# See: https://github.com/RyanMillerC/better-vim-tmux-resizer
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Edit values if you use custom resize_count variables
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "resize-pane -L 10"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "resize-pane -D 5"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "resize-pane -U 5"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "resize-pane -R 10"


# start window with pane at 1
set-option -g renumber-windows on


# styles
set-option -g status-left-length 30
set-option -g status-style bg=black,fg=white
set-option -g status-justify centre

set-option -g status-left "#[fg=green]#(echo [)#[fg=cyan]#(echo æ¥·)#[fg=green]#(echo ][)#[fg=yellow]#{session_name}#[fg=green]#(echo ])"
set-option -g status-right '#[fg=green]#(echo [)#[fg=cyan]#{?pane_at_top,top,bot}#[fg=green]#(echo "|")#[fg=cyan]#{?pane_at_left,left,right}#[fg=green]#(echo ][)#[fg=colour230]#(whoami)#[fg=green]#(echo ])'

set-window-option -g window-status-format '#[fg=green]#(echo [)#[fg=yellow]#I#[fg=green]#(echo ])#[default]#W#[fg=green]#F'
set-window-option -g window-status-current-format '#[fg=green,bold]#(echo [)#[fg=cyan]#I#[fg=green]#(echo ][)#[fg=colour230]#W#[fg=dim]#F#[fg=green]#(echo ])'

# set inactive/active window styles
set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour250,bg=colour232'

#pane borders

setw -g mode-keys vi

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind P paste-buffer
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "
